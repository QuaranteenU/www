{"version":3,"sources":["webpack:///./src/components/SignupSwal.js","webpack:///./src/components/SignupForm.js","webpack:///./src/pages/register.js"],"names":["ShareButtons","styled","div","SignupSwal","title","src","width","height","style","border","overflow","scrolling","frameBorder","allowtransparency","allow","id","allowFullScreen","className","position","visibility","data-url","SignupForm","defaultRole","formId","fieldNames","simpleEmail","useState","validated","setValidated","formRole","setFormRole","email","setEmail","submitted","setSubmitted","handleEmailChange","event","target","value","Form","noValidate","onSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","postURL","serialize","formRequest","Request","method","mode","fetch","then","res","status","Error","swal","icon","partyhat","content","button","reset","catch","error","console","Row","Group","as","Col","md","controlId","Label","Control","required","type","placeholder","name","firstName","lastName","InputGroup","pattern","simpleEmailPattern","onChange","Feedback","universityEmailPattern","OverlayTrigger","placement","overlay","Tooltip","timezone","role","split","domain","readOnly","Button","disabled","Registration","location","state","route","date","closedContent","Fragment","to"],"mappings":"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","file":"component---src-pages-register-js-f3332fbfccef4eb7603f.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ShareButtons = styled.div`\n  & > iframe {\n    margin: 5px;\n  }\n`;\n\nconst SignupSwal = () => (\n  <div>\n    <p>\n      You're all signed up! Stay tuned for more information, we'll send you an\n      email as soon as we have updates. In the meantime, please spread the word\n      and tell your friends!\n    </p>\n\n    <ShareButtons>\n      <iframe\n        title=\"Facebook Share Button\"\n        src=\"https://www.facebook.com/plugins/share_button.php?href=https%3A%2F%2Fquaranteen.university%2F&layout=button&size=small&appId=601642820272377&width=67&height=20\"\n        width=\"67\"\n        height=\"20\"\n        style={{\n          border: \"none\",\n          overflow: \"hidden\",\n        }}\n        scrolling=\"no\"\n        frameBorder=\"0\"\n        allowtransparency=\"true\"\n        allow=\"encrypted-media\"\n      />\n      <iframe\n        title=\"Twitter Tweet Button\"\n        id=\"twitter-widget-0\"\n        scrolling=\"no\"\n        frameBorder=\"0\"\n        allowtransparency=\"true\"\n        allowFullScreen={true}\n        className=\"twitter-share-button twitter-share-button-rendered twitter-tweet-button\"\n        style={{\n          position: \"static\",\n          visibility: \"visible\",\n          width: \"60px\",\n          height: \"20px\",\n        }}\n        src=\"https://platform.twitter.com/widgets/tweet_button.d0f13be8321eb432fba28cfc1c3351b1.en.html#dnt=false&amp;hashtags=QuaranteenU&amp;id=twitter-widget-0&amp;lang=en&amp;original_referer=http%3A%2F%2Flocalhost%3A8000%2Fregister%2F&amp;size=m&amp;text=I%20just%20signed%20up%20for%20virtual%20commencement%20at%20Quaranteen%20University!%20You%20can%20too!&amp;time=1584765354022&amp;type=share&amp;url=https%3A%2F%2Fquaranteen.university%2F&amp;via=QuaranteenU\"\n        data-url=\"https://quaranteen.university/\"\n      />\n    </ShareButtons>\n  </div>\n);\n\nexport default SignupSwal;\n","import React, { useState } from \"react\";\nimport swal from \"@sweetalert/with-react\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport { FaQuestionCircle } from \"react-icons/fa\";\nimport SignupSwal from \"./SignupSwal\";\nimport partyhat from \"../images/party.png\";\nimport serialize from \"../util/serialize\";\nimport { universityEmailPattern, simpleEmailPattern } from \"../util/regex\";\n\nconst SignupForm = ({ defaultRole, formId, fieldNames, simpleEmail }) => {\n  const [validated, setValidated] = useState(false);\n  const [formRole, setFormRole] = useState(defaultRole || \"\");\n  const [email, setEmail] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleEmailChange = event => setEmail(event.target.value);\n  const handleRoleChange = event => setFormRole(event.target.value);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    } else {\n      setSubmitted(true);\n      const postURL = `https://docs.google.com/forms/d/e/${formId}/formResponse?${serialize(\n        form\n      )}`;\n      const config = {\n        method: \"GET\",\n        mode: \"no-cors\",\n      };\n\n      const formRequest = new Request(postURL, config);\n      fetch(formRequest)\n        .then(res => {\n          if (res.status === 0 || res.status === 200) {\n            swal({\n              title: \"Woohoo!\",\n              icon: partyhat,\n              content: <SignupSwal />,\n              button: \"yuh\",\n            }).then(() => {\n              form.reset();\n              setFormRole(\"\");\n              setEmail(\"\");\n              setSubmitted(false);\n              setValidated(false);\n            });\n          } else {\n            throw new Error(\"Request failed!\");\n          }\n        })\n        .catch(error => {\n          swal(\"Oh no!\", error, \"error\");\n          console.error(error);\n        });\n    }\n\n    setValidated(true);\n  };\n\n  return (\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n      <Form.Row>\n        <Form.Group as={Col} md=\"6\" controlId=\"firstName\">\n          <Form.Label>First name</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"First name\"\n            name={fieldNames.firstName}\n          />\n        </Form.Group>\n        <Form.Group as={Col} md=\"6\" controlId=\"lastName\">\n          <Form.Label>Last name</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Last name\"\n            name={fieldNames.lastName}\n          />\n        </Form.Group>\n      </Form.Row>\n      <Form.Row>\n        {simpleEmail ? (\n          <Form.Group as={Col} md=\"6\" controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <InputGroup>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"someone@gmail.com\"\n                pattern={simpleEmailPattern}\n                name={fieldNames.email}\n                value={email}\n                onChange={handleEmailChange}\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Please enter a valid email address.\n              </Form.Control.Feedback>\n            </InputGroup>\n          </Form.Group>\n        ) : (\n          <Form.Group as={Col} md=\"6\" controlId=\"email\">\n            <Form.Label>\n              {formRole === \"Audience\" ? \"\" : \"University \"}Email Address\n            </Form.Label>\n            <InputGroup>\n              <Form.Control\n                type=\"email\"\n                placeholder={\n                  formRole === \"Audience\"\n                    ? \"someone@gmail.com\"\n                    : \"someone@school.edu\"\n                }\n                pattern={\n                  formRole === \"Audience\"\n                    ? simpleEmailPattern\n                    : universityEmailPattern\n                }\n                name={fieldNames.email}\n                value={email}\n                onChange={handleEmailChange}\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Please enter a valid{\" \"}\n                {formRole === \"Audience\" ? (\n                  \"\"\n                ) : (\n                  <strong>university/college</strong>\n                )}{\" \"}\n                email address.\n              </Form.Control.Feedback>\n            </InputGroup>\n          </Form.Group>\n        )}\n\n        <Form.Group as={Col} md=\"6\" controlId=\"timezone\">\n          <Form.Label>\n            Timezone{\" \"}\n            <OverlayTrigger\n              placement=\"right\"\n              overlay={\n                <Tooltip>\n                  We'll match you with a graduation time that doesn't keep you\n                  up late.\n                </Tooltip>\n              }\n            >\n              <FaQuestionCircle />\n            </OverlayTrigger>\n          </Form.Label>\n          <Form.Control as=\"select\" name={fieldNames.timezone} required>\n            <option value=\"\">-- Select a timezone --</option>\n            <option>GMT-11:00 (Midway Islands Time)</option>\n            <option>GMT-10:00 (Hawaii Standard Time)</option>\n            <option>GMT-9:00 (Alaska Standard Time)</option>\n            <option>GMT-8:00 (Pacific Standard Time)</option>\n            <option>GMT-7:00 (Phoenix Standard Time)</option>\n            <option>GMT-7:00 (Mountain Standard Time)</option>\n            <option>GMT-6:00 (Central Standard Time)</option>\n            <option>GMT-5:00 (Eastern Standard Time)</option>\n            <option>GMT-5:00 (Indiana Eastern Standard Time)</option>\n            <option>GMT-4:00 (Puerto Rico and US Virgin Islands Time)</option>\n            <option>GMT-3:30 (Canada Newfoundland Time)</option>\n            <option>GMT-3:00 (Argentina Standard Time)</option>\n            <option>GMT-3:00 (Brazil Eastern Time)</option>\n            <option>GMT-1:00 (Central African Time)</option>\n            <option>GMT+0:00 (Greenwich Mean Time)</option>\n            <option>GMT+1:00 (European Central Time)</option>\n            <option>GMT+2:00 (Eastern European Time)</option>\n            <option>GMT+2:00 (Egypt Standard Time)</option>\n            <option>GMT+3:00 (Eastern African Time)</option>\n            <option>GMT+3:30 (Middle East Time)</option>\n            <option>GMT+4:00 (Near East Time)</option>\n            <option>GMT+5:00 (Pakistan Lahore Time)</option>\n            <option>GMT+5:30 (India Standard Time)</option>\n            <option>GMT+6:00 (Bangladesh Standard Time)</option>\n            <option>GMT+7:00 (Vietnam Standard Time)</option>\n            <option>GMT+8:00 (China Standard Time)</option>\n            <option>GMT+8:00 (Taipei Standard Time)</option>\n            <option>GMT+9:00 (Japan Standard Time)</option>\n            <option>GMT+9:30 (Australia Central Time)</option>\n            <option>GMT+10:00 (Australia Eastern Time)</option>\n            <option>GMT+11:00 (Solomon Standard Time)</option>\n            <option>GMT+12:00 (New Zealand Standard Time)</option>\n          </Form.Control>\n          <Form.Control.Feedback type=\"invalid\">\n            Please select a timezone.\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Form.Row>\n      <Form.Row>\n        <Form.Group as={Col} md=\"6\" controlId=\"role\">\n          <Form.Label>How would you like to participate?</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name={fieldNames.role}\n            value={formRole}\n            onChange={handleRoleChange}\n            required\n          >\n            <option value=\"\">-- Select a role --</option>\n            <option value=\"Graduate\">Graduate</option>\n            <option value=\"Audience\">Audience Member</option>\n          </Form.Control>\n          <Form.Control.Feedback type=\"invalid\">\n            Please select an option.\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"6\" controlId=\"emaildomain\" className=\"d-none\">\n          <Form.Label>Email Domain</Form.Label>\n          <InputGroup>\n            <Form.Control\n              type=\"text\"\n              value={email.split(\"@\")[1] || \"\"}\n              name={fieldNames.domain}\n              readOnly\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              You shouldn't be able to see this!\n            </Form.Control.Feedback>\n          </InputGroup>\n        </Form.Group>\n      </Form.Row>\n      <Button type=\"submit\" className=\"wiggle\" disabled={submitted}>\n        Hype hype\n      </Button>\n    </Form>\n  );\n};\n\nexport default SignupForm;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/SEO\";\nimport DeadlineChecker from \"../components/DeadlineChecker\";\nimport SignupForm from \"../components/SignupForm\";\n\nconst Registration = ({ location }) => {\n  let role = null;\n  if (location && location.state) {\n    role = location.state.role;\n  }\n\n  const fieldNames = {\n    firstName: \"entry.1677400286\",\n    lastName: \"entry.993248599\",\n    email: \"entry.1555601280\",\n    timezone: \"entry.1538936380\",\n    role: \"entry.1806088227\",\n    domain: \"entry.144425953\",\n  };\n\n  return (\n    <Layout>\n      <SEO title=\"Register\" route=\"/register\" />\n      <DeadlineChecker\n        date=\"05/2/2020\"\n        closedContent={\n          <React.Fragment>\n            <h1>Registration Closed!</h1>\n            <p className=\"lead\">\n              Although registration has closed, due to a technical issue with\n              our email system we're opening up the RSVP to all interested\n              students instead of only those who had already registered. You can\n              find the RSVP form <Link to=\"/newgrad\">here</Link>!\n            </p>\n          </React.Fragment>\n        }\n      >\n        <h1>\n          Join the {role === \"Audience\" ? \"Audience\" : \"Graduating Class\"}\n        </h1>\n        <p className=\"lead\">\n          Excited for virtual commencement? Let us know, and we'll keep you\n          updated! <br />\n          <small className=\"text-muted\">\n            <em>\n              Are you a graduating high school senior (or a friend/parent of\n              one)? Use the <Link to=\"/academy\">QUA Interest Form</Link>{\" \"}\n              instead!\n            </em>\n          </small>\n          <br />\n          <small className=\"text-muted\">\n            <em>\n              Registration closes{\" \"}\n              <strong>\n                May 1<sup>st</sup>\n              </strong>{\" \"}\n              at <strong>midnight</strong>!\n            </em>\n          </small>\n        </p>\n        <SignupForm\n          defaultRole={role}\n          formId=\"1FAIpQLScTKQ9YHAMJqLxgVztjnmp5b3kfaoSgKl_KwaF4VeFj2-tRhw\"\n          fieldNames={fieldNames}\n          simpleEmail={false}\n        />\n      </DeadlineChecker>\n    </Layout>\n  );\n};\n\nexport default Registration;\n"],"sourceRoot":""}